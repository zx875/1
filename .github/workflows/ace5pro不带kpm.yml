name: ace5pro不带kpm
on:
  workflow_dispatch:
    inputs:
      CPU:
        description: "分支"
        required: true
        default: 'sm8750'
      FEIL:
        description: "配置文件"
        required: true
        default: 'oneplus_ace5_pro'
      CPUD:
        description: "处理器代号"
        required: true
        default: 'sun'
      ANDROID_VERSION:
        description: "内核安卓版本"
        required: true
        default: 'android15'
      KERNEL_VERSION:
        description: "内核版本"
        required: true
        default: '6.6'
      KERNEL_NAME:
        description: "修改内核名称"
        required: true
        default: '-android15-8-g013ec21bba94-abogki383916444'
      local_version:
        description: 'CONFIG_LOCALVERSION value (optional, default: "-4k")'
        required: false
        default: '-4k'
        type: string
      kernelsu_version:
       description: '设置 KSUVER，自定义版本号'
       required: false
       default: '66666'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_HARDLINK: "true"
      TOKEN: ${{ secrets.TOKEN }}
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 8192
          temp-reserve-mb: 2048
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'
          remove-codeql: 'true'
          
      - name: Configure Git
        run: |
         git config --global user.name "build"
         git config --global user.email "2106456897@qq.com"

      - name: Install dependencies
        run: |
         sudo apt update && sudo apt upgrade -y
         sudo apt install -y python3 git curl

      - name: Install repo tool
        run: |
         curl https://storage.googleapis.com/git-repo-downloads/repo > ~/repo
         chmod a+x ~/repo
         sudo mv ~/repo /usr/local/bin/repo

      - name: Initialize repo and sync
        run: |
         mkdir kernel_workspace && cd kernel_workspace
         repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b refs/heads/oneplus/${{ github.event.inputs.CPU }} -m ${{ github.event.inputs.FEIL }}.xml --depth=1
         repo --trace sync -c -j$(nproc --all) --no-tags
         rm kernel_platform/common/android/abi_gki_protected_exports_* || echo "No protected exports!"
         rm kernel_platform/msm-kernel/android/abi_gki_protected_exports_* || echo "No protected exports!"
         
      - name: Add SukiSU-Ultra
        if: ${{ inputs.kernelsu_variant == 'SukiSU-Ultra' }}
        run: |
         cd kernel_workspace/kernel_platform
         # 注意：此处运行完 setup.sh 后才进入 KernelSU 修改版本
         curl -LSs "https://raw.githubusercontent.com/ShirkNeko/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-dev
         cd KernelSU
         KSU_VERSION="${{ inputs.kernelsu_version }}"
         echo "KSUVER=$KSU_VERSION" >> $GITHUB_ENV
         export KSU_VERSION=$KSU_VERSION
         # 确保 setup.sh checkout 完后再修改 Makefile 中版本
         sed -i "s/DKSU_VERSION=[0-9]\+/DKSU_VERSION=${KSU_VERSION}/" kernel/Makefile
         cat kernel/Makefile | grep DKSU_VERSION
         
      - name: Set up SUSFS & apply patches
        run: |
         set -e

         cd kernel_workspace
         git clone --depth=1 https://gitlab.com/simonpunk/susfs4ksu.git -b gki-${{ inputs.ANDROID_VERSION }}-${{ inputs.KERNEL_VERSION }}
         git clone --depth=1 https://github.com/SukiSU-Ultra/SukiSU_patch.git
         git clone https://$TOKEN@github.com/egcd521/111.git
         cd kernel_platform
         cp ../susfs4ksu/kernel_patches/50_add_susfs_in_gki-${{ inputs.ANDROID_VERSION }}-${{ inputs.KERNEL_VERSION }}.patch ./common/ || true
         mkdir -p ./common/fs ./common/include/linux ./common/lib ./common/crypto
         cp ../susfs4ksu/kernel_patches/fs/* ./common/fs/ || true
         cp ../susfs4ksu/kernel_patches/include/linux/* ./common/include/linux/ || true
         cp -r ../SukiSU_patch/other/zram/lz4k/include/linux/* ./common/include/linux || true
         cp -r ../SukiSU_patch/other/zram/lz4k/lib/* ./common/lib || true
         cp -r ../SukiSU_patch/other/zram/lz4k/crypto/* ./common/crypto || true
         cp -r ../SukiSU_patch/other/zram/lz4k_oplus ./common/lib/ || true
         cp ../111/boot.patch ./common/
         cd ./common
         PATCH_FILE=50_add_susfs_in_gki-${{ inputs.ANDROID_VERSION }}-${{ inputs.KERNEL_VERSION }}.patch
         if [[ -f "$PATCH_FILE" ]]; then
         sed -i 's/-32,12 +32,38/-32,11 +32,37/g' "$PATCH_FILE"
         sed -i '/#include <trace\/hooks\/fs.h>/d' "$PATCH_FILE"
         patch -p1 < "$PATCH_FILE" || true
         fi
         cp ../../SukiSU_patch/hooks/syscall_hooks.patch ./
         patch -p1 -F 3 < syscall_hooks.patch || true
         patch -s -p1 -F 3 < boot.patch
         echo "✅ SUSFS 和 syscall_hooks patch 应用完成"

      - name: Apply lz4kd Patches
        run: |
         set -e
         cd kernel_workspace/kernel_platform/common
         PATCH_FILE=../../SukiSU_patch/other/zram/zram_patch/${{ inputs.KERNEL_VERSION }}/lz4kd.patch
         if [[ -f "$PATCH_FILE" ]]; then
         cp "$PATCH_FILE" ./lz4kd.patch
         patch -p1 -F 3 < lz4kd.patch || true
         else
         echo "❗ lz4kd patch not found for kernel version ${{ inputs.KERNEL_VERSION }}"
         fi

      - name: Set CONFIG_LOCALVERSION
        run: |
          cd kernel_workspace/kernel_platform
          echo "Local version: ${{ github.event.inputs.LOCAL_VERSION }}"
          sed -i "s/CONFIG_LOCALVERSION=\"-4k\"/CONFIG_LOCALVERSION=\"${{ github.event.inputs.LOCAL_VERSION }}\"/" ./common/arch/arm64/configs/gki_defconfig
           
      - name: Add SUSFS Configuration Settings
        run: |
          cd kernel_workspace/kernel_platform
          echo "CONFIG_KSU=y" >> ./common/arch/arm64/configs/gki_defconfig
          # echo "CONFIG_KPM=y" >> ./common/arch/arm64/configs/gki_defconfig

          # Add VFS configuration settings
          echo "CONFIG_KSU_SUSFS_SUS_SU=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_MANUAL_HOOK=y" >> ./common/arch/arm64/configs/gki_defconfig
          
          # Add SUSFS configuration settings
          echo "CONFIG_KSU_SUSFS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_PATH=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_KSTAT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_TRY_UMOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_UNAME=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_ENABLE_LOG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_KSU_SUSFS_OPEN_REDIRECT=y" >> ./common/arch/arm64/configs/gki_defconfig
          
          echo "CONFIG_CRYPTO_LZ4HC=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4K=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4KD=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_842=y" >> ./common/arch/arm64/configs/gki_defconfig
          echo "CONFIG_CRYPTO_LZ4K_OPLUS=y" >> ./common/arch/arm64/configs/gki_defconfig
         
          # Remove check_defconfig
          sed -i 's/check_defconfig//' ./common/build.config.gki
          cd common
          git add -A && git commit -a -m "BUILD Kernel"
          
      - name: Add make name
        run: |
         cd kernel_workspace/kernel_platform
         sed -i 's/res="\$res\$(cat "\$file")"/res="${{ github.event.inputs.KERNEL_NAME }}"/g' ./common/scripts/setlocalversion

      - name: Add sched_ext
        run: |
         cd kernel_workspace/kernel_platform/
         git clone https://github.com/egcd123/sched_ext.git
         cp -r ./sched_ext/* ./common/kernel/sched
         rm -rf ./sched_ext/.git
         cd common/kernel/sched
         sed -i.bak '/# include "ext.c"/a\# include "hmbird_sched_proc_main.c"\n#endif\n\n#ifdef CONFIG_SLIM_SCHED\n# include "slim_sysctl.c"' build_policy.c

      - name: Set build timestamp
        run: |         
         export SOURCE_DATE_EPOCH=$(date -d "2024-12-17 23:36:49 UTC" +%s)
         echo "SOURCE_DATE_EPOCH=$SOURCE_DATE_EPOCH" >> $GITHUB_ENV
         
      - name: Build kernel
        run: |
         cd kernel_workspace/kernel_platform
         tools/bazel run --config=fast --config=stamp --lto=thin //common:kernel_aarch64_dist -- --dist_dir=dist
         
      - name: Make AnyKernel3
        run: |
         if [ "${{ github.event.inputs.FEIL }}" = "oneplus_ace5_pro" ]; then
         git clone https://github.com/egcd123/AnyKernel3.git --depth=1
         fi
         rm -rf ./AnyKernel3/push.sh
         cp kernel_workspace/kernel_platform/dist/Image ./AnyKernel3/

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
         name: AnyKernel3_SuKiSu_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}
         path: ./AnyKernel3/*
         
      - name: Upload Image
        uses: actions/upload-artifact@v4
        with:
         name: Image_SuKiSu_${{ env.KSUVER }}_${{ github.event.inputs.FEIL }}
         path: kernel_workspace/kernel_platform/dist/Image
